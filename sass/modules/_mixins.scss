//	A mixin lets you make groups of CSS declarations that you want to reuse throughout your site.

@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
}
	&:after {
		clear: both;
	}
}



// Vendor prefixer

@mixin prefix($map, $vendors: webkit moz ms o) {
  @each $prop, $value in $map {
        @if $vendors {
          @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $prop}: #{$value};
          }
        }
        // Dump regular property anyway
        #{$prop}: #{$value};
  }
}

@mixin wrapper() {
	max-width: 1200px;
	width: 100%;
	margin: 0 auto;
	position: relative;
}

@mixin box-sizing($box-model) {
  @include prefix((box-sizing: $box-model), webkit moz);
}

@mixin animate($property...) {
	@include prefix((transition: $property), webkit moz ms o);
}
@mixin box-shadow($vertical: 0px, $horizontal: 2px, $blur: 3px, $color: #000, $inset: false) {
  @if $inset {
    @include prefix((box-shadow:inset $horizontal $vertical $blur $color), webkit moz);
  } @else {
    @include prefix((box-shadow:$vertical $horizontal $blur $color), webkit moz);
  }
}


// nth-of-type() to set navigation widths...

$width: 20% 10% 35% 25% 10%;

@for $i from 1 through length($width) {
	.nav:nth-of-type(#{$i}) {
		width: nth($width, $i);
	}
}

@mixin absolute($top: false, $right: false, $bottom: false, $left: false) {
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	position: absolute;
}


@mixin list-style() {
	list-style: none;
	margin: 0;
	padding: 0;
}

@mixin wrapper-padding() {
	padding: px(60) px(30);
}

@mixin transitions() {
	transition: all ease .2s;
}

@mixin breakpoint($point) {
	@if $point == 960 {
		@media (max-width: px(960)) { @content; }
	}
	@else if $point == 600 {
		@media (max-width: px(600)) { @content; }
	}
	@else if $point == 400 {
		@media (max-width: px(400)) { @content; }
	}
}

@mixin link-colors($normal, $hover: false) {
  color: $normal;
  @if $hover {
    &:hover {
      color: $hover;
    }
  }
}

@mixin button-colors($normal, $hover: false) {
	background: $normal;
	@if $hover {
		&:hover {
			background: $hover;
		}
	}
}

@mixin button-border($border-top, $border-bottom) {
	border-top: 1px solid rgba(0,0,0,$border-top);
	border-bottom: 1px solid rgba(255,255,255,$border-bottom);
}


